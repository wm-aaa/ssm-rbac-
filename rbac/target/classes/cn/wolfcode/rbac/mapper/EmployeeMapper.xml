<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wolfcode.rbac.mapper.EmployeeMapper">
  <resultMap id="BaseResultMap" type="cn.wolfcode.rbac.domain.Employee">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="admin" jdbcType="BIT" property="admin" />
    <association property="dept" javaType="Department" columnPrefix="d_">
      <id property="id" column="id"></id>
      <result property="name" column="name"></result>
    </association>
<!--
      多表查询
      property:查出来的数据封装在哪个属性上
      column:根据哪个列查询
-->
    <collection property="roles" column="id" ofType="Role"
    select="cn.wolfcode.rbac.mapper.EmployeeMapper.selectByEmId"></collection>

  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from employee
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" keyProperty="id" parameterType="cn.wolfcode.rbac.domain.Employee" useGeneratedKeys="true">
    insert into employee (name, password, email, 
      age, admin, dept_id)
    values (#{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{age,jdbcType=INTEGER}, #{admin,jdbcType=BIT}, #{dept.id,jdbcType=BIGINT})
  </insert>
  <insert id="insertToEmployeeRole">
    insert into employee_role (employee_id,role_id)
    value (#{id},#{roleIds})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.wolfcode.rbac.domain.Employee">
    update employee
    set name = #{name,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      admin = #{admin,jdbcType=BIT},
      dept_id = #{dept.id}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, name, password, email, age, admin
    from employee
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, name, password, email, age, admin, dept_id
    from employee
  </select>
  <select id="pagForCount" resultType="java.lang.Integer">
    select count(id) from employee;
  </select>
  <select id="pagForList" resultMap="BaseResultMap">
    select e.id,e.name,e.password,e.email,e.age,e.admin,d.id d_id,d.name d_name
    from employee as e
    left join department as d
    on e.dept_id=d.id
    <where>
      <if test="deptId != -1">
        and d.id=#{deptId}
      </if>
      <if test="keyword != null">
        and ((e.name like concat('%',#{keyword},'%')) OR (e.email like concat('%',#{keyword},'%')))
      </if>
    </where>
    limit #{start},#{pageSize}
  </select>
  <select id="selecttoName" resultType="java.lang.Long">
    select id
    from employee
    where name = #{name}
  </select>
<!--多表查询-->
  <select id="selectByEmId" resultMap="BaseResultMap">
    select r.id,r.name,r.sn
    from role r
    left join employee_role er
    on r.id=er.role_id
    where er.employee_id=#{id}
  </select>
    <select id="selectByNameAndByPassword" resultType="cn.wolfcode.rbac.domain.Employee">
      select *
      from employee
      where name = #{name} and password = #{password}
    </select>


</mapper>